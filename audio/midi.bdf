// BinDef for a standard MIDI file
// Documentation can be found at https://midi.org/standard-midi-files

{
  meta: {
    bdf: "0.1",
    name: "MIDI audio file",
    exts: [".mid", ".midi"],
    mime: ["audio/midi"],
  },
  binary: [
    // .midi uses a typical type-length-value structure (chunk) to encode its contents
    // the first one is the header chunk which uses the type "MThd".
    { id: header,
      type: struct,
      endian: "big",
      fields: [
        { type: magic,  match: "MThd" },
        { type: uint32, id: _length, valid: _length == 6 },
        { type: uint16, id: format,  name: "Format", 
          valid: 0 <= format && format <= 2 },
        { type: uint16, id: nTracks, name: "Number of tracks", 
          valid: format != 0 || nTracks == 1 },
        { type: int16, id: _division },
        { if: (_division >> 15) & 1 == 0,
          type: var, id: ticksPerQn, name: "Ticks per quarter-note", value: _division >> 1 },
        // TODO: Is this correct?
        { if: (_division >> 15) & 1 == 1,
          type: var, id: framePerSecond, name: "SMPTE frame per second", value: -(_division >> 9) },
        { if: (_division >> 15) & 1 == 1,
          type: var, id: ticksPerFrame, name: "Ticks per frame", value: _division & 0xff } 
      ]
    }
  ]
  
}